// <auto-generated />
using Library.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220630013445_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Library.Core.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Author One"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Author Two"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Author Three"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "11111",
                            Name = "Book One",
                            NumberOfPages = 325,
                            Price = 35.25m,
                            PublisherId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "22222",
                            Name = "Book Two",
                            NumberOfPages = 625,
                            Price = 22.75m,
                            PublisherId = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            ISBN = "33333",
                            Name = "Book Three",
                            NumberOfPages = 550,
                            Price = 15.65m,
                            PublisherId = 1
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "44444",
                            Name = "Book Four",
                            NumberOfPages = 438,
                            Price = 155.4m,
                            PublisherId = 2
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            ISBN = "55555",
                            Name = "Book Five",
                            NumberOfPages = 1275,
                            Price = 125.25m,
                            PublisherId = 2
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            ISBN = "66666",
                            Name = "Book Six",
                            NumberOfPages = 128,
                            Price = 45.15m,
                            PublisherId = 2
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Publisher One"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Publisher Two"
                        });
                });

            modelBuilder.Entity("Library.Core.Models.Book", b =>
                {
                    b.HasOne("Library.Core.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Core.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Library.Core.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Core.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
